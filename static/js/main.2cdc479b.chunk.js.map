{"version":3,"sources":["Filedrop.js","App.js","index.js"],"names":["FileDrop","onDrop","React","useState","drag","setDrag","filename","setFilename","dropRef","createRef","dragCounter","handleDrag","e","preventDefault","stopPropagation","handleDragIn","dataTransfer","items","length","handleDragOut","handleDrop","files","name","clearData","useEffect","div","current","addEventListener","removeEventListener","ref","className","msToBsd","ms","s","m","parseInt","sprintf","App","downloadUrl","setDownloadUrl","description","setDescription","csv","setCsv","dropped","a","reader","FileReader","onload","midi","Midi","target","result","markers","common","Format","Type","tracks","forEach","track","notes","console","log","instrument","note","push","Name","Start","time","duration","Description","csvText","Object","keys","join","map","values","encodedUri","encodeURI","readAsArrayBuffer","Container","maxWidth","Box","sx","my","Typography","variant","component","gutterBottom","noValidate","mt","Filedrop","TextField","margin","fullWidth","label","helperText","onChange","value","autoFocus","Button","href","download","mb","style","width","height","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2cdc479b.chunk.js","sourcesContent":["import React from \"react\";\nconst FileDrop = ({ onDrop }) => {\n  const [drag, setDrag] = React.useState(false);\n  const [filename, setFilename] = React.useState(\"\");\n  let dropRef = React.createRef();\n  let dragCounter = 0;\n\n  const handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDragIn = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dragCounter++;\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) setDrag(true);\n  };\n\n  const handleDragOut = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dragCounter--;\n    if (dragCounter === 0) setDrag(false);\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDrag(false);\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      onDrop(e.dataTransfer.files[0]);\n      setFilename(e.dataTransfer.files[0].name);\n      e.dataTransfer.clearData();\n      dragCounter = 0;\n    }\n  };\n\n  React.useEffect(() => {\n    let div = dropRef.current;\n    div.addEventListener(\"dragenter\", handleDragIn);\n    div.addEventListener(\"dragleave\", handleDragOut);\n    div.addEventListener(\"dragover\", handleDrag);\n    div.addEventListener(\"drop\", handleDrop);\n    return () => {\n      div.removeEventListener(\"dragenter\", handleDragIn);\n      div.removeEventListener(\"dragleave\", handleDragOut);\n      div.removeEventListener(\"dragover\", handleDrag);\n      div.removeEventListener(\"drop\", handleDrop);\n    };\n  });\n\n  return (\n    <div\n      ref={dropRef}\n      className={\n        drag ? \"filedrop drag\" : filename ? \"filedrop ready\" : \"filedrop\"\n      }\n    >\n      {filename && !drag ? <div>{filename}</div> : <div>Drop a file here!</div>}\n    </div>\n  );\n};\nexport default FileDrop;\n","import \"./styles.css\";\nimport React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { Midi } from \"@tonejs/midi\";\nimport { sprintf } from \"sprintf-js\";\nimport Filedrop from \"./Filedrop\";\nconst msToBsd = (ms) => {\n  const s = ms / 1000.0;\n  const m = parseInt(s / 60);\n  return sprintf(\"%(m)02d:%(s)06.3f\", { m, s: s - m * 60 });\n};\n\nexport default function App() {\n  const [url, setUrl] = React.useState(\"\");\n  const [downloadUrl, setDownloadUrl] = React.useState();\n  const [filename, setFilename] = React.useState();\n  const [description, setDescription] = React.useState();\n  const [csv, setCsv] = React.useState(\"\");\n  const handleDrop = async (dropped) => {\n    //read the file\n    const reader = new FileReader();\n    reader.onload = async function (e) {\n      const midi = new Midi(e.target.result);\n      var markers = [];\n      const common = {\n        Format: \"decimal\",\n        Type: \"Cue\"\n      };\n      midi.tracks.forEach((track) => {\n        const notes = track.notes;\n        console.log(\n          \"Track \",\n          track.instrument.name,\n          \" has \",\n          track.notes.length\n        );\n        notes.forEach((note) => {\n          markers.push({\n            Name: note.name,\n            Start: msToBsd(note.time * 1000),\n            \"Duration Time\": msToBsd(note.duration * 1000),\n            ...common,\n            Description:\n              description ?? `${dropped.name} : ${track.instrument.name}`\n          });\n        });\n      });\n      const csvText = [\n        Object.keys(markers[0]).join(\"\\t\"),\n        ...markers.map((m) => Object.values(m).join(\"\\t\"))\n      ].join(\"\\n\");\n\n      let csvContent = \"data:text/csv;charset=utf-8,\" + csvText;\n      var encodedUri = encodeURI(csvText);\n      setCsv(csvText);\n      setDownloadUrl(encodedUri);\n      setFilename(`${dropped.name}.csv`);\n    };\n    reader.readAsArrayBuffer(dropped);\n  };\n  const onSubmit = async (data) => {\n    const midi = await Midi.fromUrl(url);\n    var markers = [];\n    const common = {\n      Format: \"decimal\",\n      Type: \"Cue\"\n    };\n    midi.tracks.forEach((track) => {\n      //tracks have notes and controlChanges\n\n      //notes are an array\n      const notes = track.notes;\n      notes.forEach((note) => {\n        markers.push({\n          Name: note.name,\n          Start: msToBsd(note.time * 1000),\n          \"Duration Time\": msToBsd(note.duration),\n          ...common,\n          Description: description ?? track.instrument.name\n        });\n      });\n    });\n  };\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"sm\">\n        <Box sx={{ my: 4 }}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            MIDI to Marker CSV\n          </Typography>\n        </Box>\n      </Container>\n      <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n        <Filedrop onDrop={handleDrop} />\n\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          label=\"Description (Optional)\"\n          name=\"description\"\n          helperText=\"Each marker will use the track's instrument name by default, use this field to override this. e.g. Creating multiple CSVs for different instruments if you only have one instrument per midi file\"\n          onChange={(e) => setDescription(e.target.value)}\n          autoFocus\n        />\n        <Button\n          component=\"a\"\n          href={downloadUrl}\n          download={filename}\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Download CSV\n        </Button>\n        <textarea style={{ width: \"100%\", height: \"300\" }} value={csv} />\n      </Box>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}